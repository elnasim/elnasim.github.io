{"version":3,"sources":["components/main-page/Product.js","core/api.js","components/products-page/Product.js","routes.js","views/Main.js","views/NewProduct.js","views/AddRation.js","views/Products.js","views/NoMatch.js","components/app/Header.js","App.js","serviceWorker.js","index.js"],"names":["Product","title","proteins","fats","carbohydrates","calories","weight","id","remove","className","onClick","save","key","data","localStorage","setItem","JSON","stringify","read","parse","getItem","routes","path","component","useState","ration","setRation","summary","setSummary","removeHandler","window","confirm","filter","item","useEffect","rationInfoCalc","products","map","to","setTitle","setProteins","setFats","setCarbohydrates","setСalories","history","useHistory","type","placeholder","onChange","e","target","value","preventDefault","Date","now","push","setProducts","product","setProduct","setWeight","prods","rations","onSubmit","productItem","find","isExist","defaultValue","Header","App","route","i","exact","render","props","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.709fe038.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Product({\r\n  title,\r\n  proteins,\r\n  fats,\r\n  carbohydrates,\r\n  calories,\r\n  weight,\r\n  id,\r\n  remove,\r\n}) {\r\n  return (\r\n    <div className=\"product-main\">\r\n      <div className=\"product-main__title\">\r\n        {title} ({weight} г)\r\n      </div>\r\n      <div className=\"product-main__info\">\r\n        <div className=\"product-main__i\">\r\n          {(proteins * weight) / 100}\r\n          <br />Б\r\n        </div>\r\n        <div className=\"product-main__i\">\r\n          {(fats * weight) / 100}\r\n          <br />Ж\r\n        </div>\r\n        <div className=\"product-main__i\">\r\n          {(carbohydrates * weight) / 100}\r\n          <br />У\r\n        </div>\r\n        <div className=\"product-main__i\">\r\n          {(calories * weight) / 100}\r\n          <br />\r\n          Ккал\r\n        </div>\r\n        <div className=\"remove\" onClick={() => remove(id)}>\r\n          <span className=\"material-icons\">delete</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function save(key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n}\r\n\r\nexport function read(key) {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Product({\r\n  title,\r\n  proteins,\r\n  fats,\r\n  carbohydrates,\r\n  calories,\r\n  weight,\r\n  id,\r\n  remove,\r\n}) {\r\n  return (\r\n    <div className=\"product-main\">\r\n      <div className=\"product-main__title\">{title}</div>\r\n      <div className=\"product-main__info\">\r\n        <div className=\"product-main__i\">\r\n          {proteins}\r\n          <br />Б\r\n        </div>\r\n        <div className=\"product-main__i\">\r\n          {fats}\r\n          <br />Ж\r\n        </div>\r\n        <div className=\"product-main__i\">\r\n          {carbohydrates}\r\n          <br />У\r\n        </div>\r\n        <div className=\"product-main__i\">\r\n          {calories}\r\n          <br />\r\n          Ккал\r\n        </div>\r\n        <div className=\"remove\" onClick={() => remove(id)}>\r\n          <span className=\"material-icons\">delete</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Main from \"./views/Main\";\r\nimport NewProduct from \"./views/NewProduct\";\r\nimport NoMatch from \"./views/NoMatch\";\r\nimport AddRation from \"./views/AddRation\";\r\nimport Products from \"./views/Products\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: Main,\r\n  },\r\n  {\r\n    path: \"/new-product\",\r\n    component: NewProduct,\r\n  },\r\n  {\r\n    path: \"/add-ration\",\r\n    component: AddRation,\r\n  },\r\n  {\r\n    path: \"/products\",\r\n    component: Products,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    component: NoMatch,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Product from \"../components/main-page/Product\";\r\nimport { read, save } from \"../core/api\";\r\n\r\nexport default function Main() {\r\n  const [ration, setRation] = useState([]);\r\n  const [summary, setSummary] = useState({\r\n    proteins: 0,\r\n    calories: 0,\r\n    carbohydrates: 0,\r\n    fats: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const data = read(\"ration\");\r\n    setRation(data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (ration) {\r\n      rationInfoCalc();\r\n      save(\"ration\", ration);\r\n    }\r\n  }, [ration]);\r\n\r\n  function rationInfoCalc() {\r\n    let proteins = 0,\r\n      carbohydrates = 0,\r\n      calories = 0,\r\n      fats = 0;\r\n    for (let item of ration) {\r\n      proteins += (item.proteins * item.weight) / 100;\r\n      calories += (item.calories * item.weight) / 100;\r\n      carbohydrates += (item.carbohydrates * item.weight) / 100;\r\n      fats += (item.fats * item.weight) / 100;\r\n    }\r\n\r\n    const data = {\r\n      proteins,\r\n      calories,\r\n      carbohydrates,\r\n      fats,\r\n    };\r\n\r\n    setSummary(data);\r\n  }\r\n\r\n  function removeHandler(id) {\r\n    const res = window.confirm(\"Вы уверены, что хотите удалить?\");\r\n    if (res) {\r\n      const data = ration.filter((item) => {\r\n        return item.id !== id;\r\n      });\r\n\r\n      setRation(data);\r\n    }\r\n  }\r\n\r\n  const products =\r\n    ration &&\r\n    ration.map((item) => {\r\n      return (\r\n        <Product\r\n          title={item.title}\r\n          proteins={item.proteins}\r\n          fats={item.fats}\r\n          carbohydrates={item.carbohydrates}\r\n          calories={item.calories}\r\n          id={item.id}\r\n          weight={item.weight}\r\n          remove={removeHandler}\r\n          key={item.id}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"container\">\r\n\r\n        {/* <div className=\"day\">\r\n          <div className=\"day__change\">\r\n            <span className=\"material-icons\">undo</span>\r\n          </div>\r\n          <div className=\"day__date\">16.05.2020</div>\r\n          <div className=\"day__change\">\r\n            <span className=\"material-icons\">redo</span>\r\n          </div>\r\n        </div> */}\r\n\r\n        {products}\r\n\r\n        <div className=\"product-main\">\r\n          <div className=\"product-main__title\">Всего</div>\r\n          <div className=\"product-main__info\">\r\n            <div className=\"product-main__i\">\r\n              {summary.proteins}\r\n              <br />Б\r\n            </div>\r\n            <div className=\"product-main__i\">\r\n              {summary.fats}\r\n              <br />Ж\r\n            </div>\r\n            <div className=\"product-main__i\">\r\n              {summary.carbohydrates}\r\n              <br />У\r\n            </div>\r\n            <div className=\"product-main__i\">\r\n              {summary.calories}\r\n              <br />\r\n              Ккал\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Link to=\"/add-ration\" className=\"button\">\r\n          Добавить\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { save, read } from \"../core/api\";\r\n\r\nexport default function NewProduct() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [proteins, setProteins] = useState(\"\");\r\n  const [fats, setFats] = useState(\"\");\r\n  const [carbohydrates, setCarbohydrates] = useState(\"\");\r\n  const [calories, setСalories] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    if (!title || !proteins || !fats || !carbohydrates || !calories) return;\r\n    let products;\r\n    const id = Date.now();\r\n    if (read(\"products\")) {\r\n      products = read(\"products\");\r\n    } else {\r\n      products = [];\r\n    }\r\n    products.push({\r\n      id,\r\n      title,\r\n      proteins,\r\n      fats,\r\n      carbohydrates,\r\n      calories,\r\n    });\r\n\r\n    save(\"products\", products);\r\n    history.push(\"/products\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-product\">\r\n      <div className=\"container\">\r\n        <div className=\"title\">Новый продукт</div>\r\n        <form className=\"form-new-product\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Название продукта\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            value={title}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Белки\"\r\n            onChange={(e) => setProteins(e.target.value)}\r\n            value={proteins}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Жиры\"\r\n            onChange={(e) => setFats(e.target.value)}\r\n            value={fats}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Углеводы\"\r\n            onChange={(e) => setCarbohydrates(e.target.value)}\r\n            value={carbohydrates}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Ккал\"\r\n            onChange={(e) => setСalories(e.target.value)}\r\n            value={calories}\r\n          />\r\n          <button type=\"submit\" className=\"button\" onClick={submitHandler}>\r\n            Добавить\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { read, save } from \"../core/api\";\r\n\r\nexport default function AddRation() {\r\n  const [products, setProducts] = useState([]);\r\n  const [ration, setRation] = useState([]);\r\n  const [product, setProduct] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const prods = read(\"products\");\r\n    const rations = read(\"ration\");\r\n    setProducts(prods);\r\n    setRation(rations);\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n\r\n  const prods =\r\n    products &&\r\n    products.map((item) => {\r\n      return (\r\n        <option value={item.title} key={item.id}>\r\n          {item.title}\r\n        </option>\r\n      );\r\n    });\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if (!product || product === \"Не выбрано\" || !weight) return;\r\n\r\n    const productItem = products.find((item) => item.title === product);\r\n    const isExist = ration.find((item) => item.title === product);\r\n\r\n    if (isExist) {\r\n      isExist.weight += +weight;\r\n      save(\"ration\", ration);\r\n      history.push(\"/\");\r\n    } else {\r\n      productItem.weight = +weight;\r\n      ration.push(productItem);\r\n      save(\"ration\", ration);\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-ration\">\r\n      <div className=\"container\">\r\n        <div className=\"title\">Добавить рацион</div>\r\n\r\n        {products && (\r\n          <form className=\"add-ration-form\" onSubmit={submitHandler}>\r\n            <select\r\n              className=\"input\"\r\n              onChange={(e) => setProduct(e.target.value)}\r\n            >\r\n              <option value=\"Не выбрано\" defaultValue=\"Не выбрано\">\r\n                Не выбрано\r\n              </option>\r\n              {prods}\r\n            </select>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"input\"\r\n              placeholder=\"Вес (г)\"\r\n              onChange={(e) => setWeight(e.target.value)}\r\n              value={weight}\r\n            />\r\n\r\n            <button className=\"button\">Добавить</button>\r\n          </form>\r\n        )}\r\n\r\n        {!products && (\r\n          <div className=\"title\">Необходимо добавить хотя бы один продукт</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { read, save } from \"../core/api\";\r\nimport Product from \"../components/products-page/Product\";\r\n\r\nexport default function Products() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = read(\"products\");\r\n    setProducts(data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    save(\"products\", products);\r\n  }, [products]);\r\n\r\n  function removeHandler(id) {\r\n    const res = window.confirm(\"Вы уверены, что хотите удалить?\");\r\n    if (res) {\r\n      const data = products.filter((item) => {\r\n        return item.id !== id;\r\n      });\r\n\r\n      setProducts(data);\r\n    }\r\n  }\r\n\r\n  const prods =\r\n    products &&\r\n    products.map((item) => {\r\n      return (\r\n        <Product\r\n          title={item.title}\r\n          proteins={item.proteins}\r\n          fats={item.fats}\r\n          carbohydrates={item.carbohydrates}\r\n          calories={item.calories}\r\n          id={item.id}\r\n          remove={removeHandler}\r\n          key={item.id}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"products\">\r\n      <div className=\"container\">\r\n        {prods}\r\n        <Link to=\"/new-product\" className=\"button\">\r\n          Добавить\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NoMatch() {\r\n  return <div>404</div>;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <nav className=\"header\">\r\n      <Link to=\"/\" className=\"header__link\">\r\n        Главная\r\n      </Link>\r\n      <Link to=\"/products\" className=\"header__link\">\r\n        Продукты\r\n      </Link>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\nimport {  HashRouter, Switch, Route } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport Header from \"./components/app/Header\";\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <div>\n        <Header />\n\n        <Switch>\n          {routes.map((route, i) => (\n            <Route\n              key={i}\n              exact={route.path === \"/\"}\n              path={route.path}\n              render={(props) => <route.component {...props} />}\n            />\n          ))}\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}