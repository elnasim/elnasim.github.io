{"version":3,"sources":["components/Form/Form.js","components/WeatherBlock/WeatherBlock.js","api_key.js","App.js","index.js"],"names":["searchLocation","useState","value","setValue","className","onSubmit","e","preventDefault","type","onChange","target","placeholder","weatherData","loading","error","animate","temp","CSSTransition","in","timeout","classNames","location","name","localtime","slice","current","temperature","feelslike","src","weather_icons","wind_speed","wind_dir","pressure","precip","humidity","cloudcover","visibility","apiKey","App","setWeatherData","setLoading","setError","setAnimate","fetch","then","res","json","success","ReactDOM","render","document","getElementById"],"mappings":"iSAGe,G,YAAA,YAAyB,IAAtBA,EAAqB,EAArBA,eAAqB,EACXC,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,KASrC,OACE,0BAAMC,UAAU,OAAOC,SAPF,SAAAC,GACrBA,EAAEC,iBACFP,EAAeE,GACfC,EAAS,MAKP,2BACEK,KAAK,OACLJ,UAAU,cACVK,SAAU,SAAAH,GAAC,OAAIH,EAASG,EAAEI,OAAOR,QACjCA,MAAOA,EACPS,YAAY,uIAEd,4BAAQP,UAAU,aAAlB,qC,QCjBS,G,MAAA,YAA+C,IAA5CQ,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACvCC,EAAO,SAAAA,GACX,OAAIA,EAAO,EACF,IAAMA,EAENA,GAIX,OACE,yBAAKZ,UAAU,mBACb,kBAACa,EAAA,EAAD,CAAeC,GAAIH,EAASI,QAAS,IAAKC,WAAW,WACnD,6BACGR,GACC,yBAAKR,UAAU,WACb,yBAAKA,UAAU,kBAAkBQ,EAAYS,SAASC,MAEtD,yBAAKlB,UAAU,gBACb,yBAAKA,UAAU,iBAAf,8EACkBQ,EAAYS,SAASE,UAAUC,MAAM,MAIzD,yBAAKpB,UAAU,gBACb,yBAAKA,UAAU,wBAAf,uEACgBY,EAAKJ,EAAYa,QAAQC,cAEzC,yBAAKtB,UAAU,sBAAf,wEACiBY,EAAKJ,EAAYa,QAAQE,YAE1C,yBACEC,IAAKhB,EAAYa,QAAQI,cACzBzB,UAAU,2BAId,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBAAf,oFACmBQ,EAAYa,QAAQK,WADvC,yBAKF,yBAAK1B,UAAU,gBACb,yBAAKA,UAAU,qBAAf,sGACsBQ,EAAYa,QAAQM,WAI5C,yBAAK3B,UAAU,gBACb,yBAAKA,UAAU,qBAAf,qDACaQ,EAAYa,QAAQO,SADjC,sDAKF,yBAAK5B,UAAU,gBACb,yBAAKA,UAAU,mBAAf,yCACWQ,EAAYa,QAAQQ,OAD/B,kBAKF,yBAAK7B,UAAU,gBACb,yBAAKA,UAAU,qBAAf,sGACsBQ,EAAYa,QAAQS,SAD1C,OAKF,yBAAK9B,UAAU,gBACb,yBAAKA,UAAU,uBAAf,iEACeQ,EAAYa,QAAQU,WADnC,OAKF,yBAAK/B,UAAU,gBACb,yBAAKA,UAAU,uBAAf,2DACcQ,EAAYa,QAAQW,WADlC,qBASTtB,GAAS,uKACTD,GAAW,uFCvFLwB,EAAS,mCCiDPC,MA3Cf,WAAgB,IAAD,EACyBrC,mBAAS,MADlC,mBACNW,EADM,KACO2B,EADP,OAEiBtC,oBAAS,GAF1B,mBAENY,EAFM,KAEG2B,EAFH,OAGavC,oBAAS,GAHtB,mBAGNa,EAHM,KAGC2B,EAHD,OAIiBxC,oBAAS,GAJ1B,mBAINc,EAJM,KAIG2B,EAJH,KA2Bb,OACE,yBAAKtC,UAAU,OACb,yBAAKA,UAAU,aACb,uCACA,kBAAC,EAAD,CAAMJ,eAzBW,SAAAqB,GACrBmB,GAAW,GACXD,EAAe,MACfE,GAAS,GACTC,GAAW,GACXC,MAAM,kDAAD,OAC+CN,EAD/C,kBAC+DhB,IAEjEuB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAA,IAAuB,IAAhBA,EAAIE,SACbR,EAAeM,GACfL,GAAW,GACXE,GAAW,KAEXD,GAAS,GACTD,GAAW,UAUb,kBAAC,EAAD,CACE5B,YAAaA,EACbC,QAASA,EACTC,MAAOA,EACPC,QAASA,OCrCnBiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d44d762b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Form.scss\";\r\n\r\nexport default ({ searchLocation }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const changeLocation = e => {\r\n    e.preventDefault();\r\n    searchLocation(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={changeLocation}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form__input\"\r\n        onChange={e => setValue(e.target.value)}\r\n        value={value}\r\n        placeholder=\"Введите местоположение...\"\r\n      />\r\n      <button className=\"form__btn\">Найти</button>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./WeatherBlock.scss\";\r\n\r\nexport default ({ weatherData, loading, error, animate }) => {\r\n  const temp = temp => {\r\n    if (temp > 0) {\r\n      return \"+\" + temp;\r\n    } else {\r\n      return temp;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"weather-wrapper\">\r\n      <CSSTransition in={animate} timeout={300} classNames=\"my-node\">\r\n        <div>\r\n          {weatherData && (\r\n            <div className=\"weather\">\r\n              <div className=\"weather__title\">{weatherData.location.name}</div>\r\n\r\n              <div className=\"weather__row\">\r\n                <div className=\"weather__time\">\r\n                  Местное время: {weatherData.location.localtime.slice(11)}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"weather__row\">\r\n                <div className=\"weather__temperature\">\r\n                  Температура: {temp(weatherData.current.temperature)}\r\n                </div>\r\n                <div className=\"weather__feelslike\">\r\n                  По ощущениям: {temp(weatherData.current.feelslike)}\r\n                </div>\r\n                <img\r\n                  src={weatherData.current.weather_icons}\r\n                  className=\"weather__weather-icon\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"weather__row\">\r\n                <div className=\"weather__wind-speed\">\r\n                  Скорость ветра: {weatherData.current.wind_speed} км/ч\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"weather__row\">\r\n                <div className=\"weather__wind-dir\">\r\n                  Направление ветра: {weatherData.current.wind_dir}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"weather__row\">\r\n                <div className=\"weather__pressure\">\r\n                  Давление: {weatherData.current.pressure} миллибар\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"weather__row\">\r\n                <div className=\"weather__precip\">\r\n                  Осадки: {weatherData.current.precip} мм\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"weather__row\">\r\n                <div className=\"weather__humidity\">\r\n                  Влажность воздуха: {weatherData.current.humidity} %\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"weather__row\">\r\n                <div className=\"weather__cloudcover\">\r\n                  Облачность: {weatherData.current.cloudcover} %\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"weather__row\">\r\n                <div className=\"weather__visibility\">\r\n                  Видимость: {weatherData.current.visibility} км\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      {error && <div>Ошибка обработки запроса</div>}\r\n      {loading && <div>Загрузка...</div>}\r\n    </div>\r\n  );\r\n};\r\n","export const apiKey = \"0bf745267784a6e0fc0250aa13787557\";\r\n","import React, { useState } from \"react\";\r\nimport \"./App.scss\";\r\nimport Form from \"./components/Form/Form\";\r\nimport WeatherBlock from \"./components/WeatherBlock/WeatherBlock\";\r\nimport { apiKey } from \"./api_key\";\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  const searchLocation = location => {\r\n    setLoading(true);\r\n    setWeatherData(null);\r\n    setError(false);\r\n    setAnimate(false);\r\n    fetch(\r\n      `http://api.weatherstack.com/current?access_key=${apiKey}&query=${location}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res && res.success !== false) {\r\n          setWeatherData(res);\r\n          setLoading(false);\r\n          setAnimate(true);\r\n        } else {\r\n          setError(true);\r\n          setLoading(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <h1>Weather</h1>\r\n        <Form searchLocation={searchLocation} />\r\n        <WeatherBlock\r\n          weatherData={weatherData}\r\n          loading={loading}\r\n          error={error}\r\n          animate={animate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}